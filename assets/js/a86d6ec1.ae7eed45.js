"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7547],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return h}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),m=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=m(e.components);return a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=m(t),h=i,s=d["".concat(p,".").concat(h)]||d[h]||u[h]||l;return t?a.createElement(s,r(r({ref:n},c),{},{components:t})):a.createElement(s,r({ref:n},c))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var m=2;m<l;m++)r[m]=t[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7489:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return u}});var a=t(7462),i=t(3366),l=(t(7294),t(3905)),r=["components"],o={slug:"T\xecm-hi\u1ec3u-v\u1ec1-th\u01b0-vi\u1ec7n-keras-trong-deep-learning",title:"T\xecm hi\u1ec3u v\u1ec1 th\u01b0 vi\u1ec7n keras trong deep learning",authors:"thorpham",tags:["python","Keras"]},p=void 0,m={permalink:"/blog/T\xecm-hi\u1ec3u-v\u1ec1-th\u01b0-vi\u1ec7n-keras-trong-deep-learning",editUrl:"https://github.com/ThorPham/blog/2018-5-25-T\xecm-hi\u1ec3u-v\u1ec1-th\u01b0-vi\u1ec7n-keras-trong-deep-learning/index.md",source:"@site/blog/2018-5-25-T\xecm-hi\u1ec3u-v\u1ec1-th\u01b0-vi\u1ec7n-keras-trong-deep-learning/index.md",title:"T\xecm hi\u1ec3u v\u1ec1 th\u01b0 vi\u1ec7n keras trong deep learning",description:"Keras l\xe0 m\u1ed9t library \u0111\u01b0\u1ee3c ph\xe1t tri\u1ec3n v\xe0o n\u0103m 2015 b\u1edfi Fran\xe7ois Chollet, l\xe0 m\u1ed9t k\u1ef9 s\u01b0 nghi\xean c\u1ee9u deep learning t\u1ea1i google. N\xf3 l\xe0 m\u1ed9t open source cho neural network \u0111\u01b0\u1ee3c vi\u1ebft b\u1edfi ng\xf4n ng\u1eef python. keras l\xe0 m\u1ed9t API b\u1eadc cao c\xf3 th\u1ec3 s\u1eed d\u1ee5ng chung v\u1edbi c\xe1c th\u01b0 vi\u1ec7n deep learning n\u1ed5i ti\u1ebfng nh\u01b0 tensorflow(\u0111\u01b0\u1ee3c ph\xe1t tri\u1ec3n b\u1edfi gg), CNTK(\u0111\u01b0\u1ee3c ph\xe1t tri\u1ec3n b\u1edfi microsoft),theano(ng\u01b0\u1eddi ph\xe1t tri\u1ec3n ch\xednh Yoshua Bengio). keras c\xf3 m\u1ed9t s\u1ed1 \u01b0u \u0111i\u1ec3m nh\u01b0 :",date:"2018-05-25T00:00:00.000Z",formattedDate:"May 25, 2018",tags:[{label:"python",permalink:"/blog/tags/python"},{label:"Keras",permalink:"/blog/tags/keras"}],readingTime:9.31,truncated:!0,authors:[{name:"Thorpham",title:"Deep learning enthusiast",url:"https://github.com/ThorPham",imageURL:"https://github.com/ThorPham.png",key:"thorpham"}],frontMatter:{slug:"T\xecm-hi\u1ec3u-v\u1ec1-th\u01b0-vi\u1ec7n-keras-trong-deep-learning",title:"T\xecm hi\u1ec3u v\u1ec1 th\u01b0 vi\u1ec7n keras trong deep learning",authors:"thorpham",tags:["python","Keras"]},prevItem:{title:"Nh\u1eadn d\u1ea1ng ch\u1eef s\u1ed1 vi\u1ebft tay v\u1edbi sklearn v\xe0 opencv",permalink:"/blog/Nh\u1eadn-d\u1ea1ng-ch\u1eef-s\u1ed1-vi\u1ebft-tay"},nextItem:{title:"Feature extraction trong computer vision",permalink:"/blog/Feature-extraction-trong-computer-vision"}},c={authorsImageUrls:[void 0]},u=[{value:"C\xe1ch c\xe0i \u0111\u1eb7t :",id:"c\xe1ch-c\xe0i-\u0111\u1eb7t-",level:2},{value:"T\xecm hi\u1ec3u c\u1ea5u tr\xfac c\u1ee7a Keras",id:"t\xecm-hi\u1ec3u-c\u1ea5u-tr\xfac-c\u1ee7a-keras",level:2},{value:"\u0110\u1ea7u ti\u1ec1n l\xe0 c\xe1c module d\xf9ng \u0111\u1ec3 x\xe2y d\u1ef1ng b\u1ed9 x\u01b0\u01a1ng cho model :",id:"\u0111\u1ea7u-ti\u1ec1n-l\xe0-c\xe1c-module-d\xf9ng-\u0111\u1ec3-x\xe2y-d\u1ef1ng-b\u1ed9-x\u01b0\u01a1ng-cho-model-",level:3},{value:"Ti\u1ebfp theo ch\xfang ta t\xecm hi\u1ec3u \u0111\u1ebfn ti\u1ec1n x\u1eed l\xfd d\u1eef li\u1ec7u trong keras, n\xf3 \u0111\u01b0\u1ee3c chia ra l\xe0m 3 ph\u1ea7n :",id:"ti\u1ebfp-theo-ch\xfang-ta-t\xecm-hi\u1ec3u-\u0111\u1ebfn-ti\u1ec1n-x\u1eed-l\xfd-d\u1eef-li\u1ec7u-trong-keras-n\xf3-\u0111\u01b0\u1ee3c-chia-ra-l\xe0m-3-ph\u1ea7n-",level:3},{value:"C\xe1c function trong b\u1ed9 x\u01b0\u01a1ng c\u1ee7a model",id:"c\xe1c-function-trong-b\u1ed9-x\u01b0\u01a1ng-c\u1ee7a-model",level:3}],d={toc:u};function h(e){var n=e.components,o=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Keras l\xe0 m\u1ed9t library \u0111\u01b0\u1ee3c ph\xe1t tri\u1ec3n v\xe0o n\u0103m 2015 b\u1edfi Fran\xe7ois Chollet, l\xe0 m\u1ed9t k\u1ef9 s\u01b0 nghi\xean c\u1ee9u deep learning t\u1ea1i google. N\xf3 l\xe0 m\u1ed9t open source cho neural network \u0111\u01b0\u1ee3c vi\u1ebft b\u1edfi ng\xf4n ng\u1eef python. keras l\xe0 m\u1ed9t API b\u1eadc cao c\xf3 th\u1ec3 s\u1eed d\u1ee5ng chung v\u1edbi c\xe1c th\u01b0 vi\u1ec7n deep learning n\u1ed5i ti\u1ebfng nh\u01b0 tensorflow(\u0111\u01b0\u1ee3c ph\xe1t tri\u1ec3n b\u1edfi gg), CNTK(\u0111\u01b0\u1ee3c ph\xe1t tri\u1ec3n b\u1edfi microsoft),theano(ng\u01b0\u1eddi ph\xe1t tri\u1ec3n ch\xednh Yoshua Bengio). keras c\xf3 m\u1ed9t s\u1ed1 \u01b0u \u0111i\u1ec3m nh\u01b0 :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"D\u1ec5 s\u1eed d\u1ee5ng,x\xe2y d\u1ef1ng model nhanh."),(0,l.kt)("li",{parentName:"ul"},"C\xf3 th\u1ec3 run tr\xean c\u1ea3 cpu v\xe0 gpu"),(0,l.kt)("li",{parentName:"ul"},"H\u1ed7 tr\u1ee3 x\xe2y d\u1ef1ng CNN , RNN v\xe0 c\xf3 th\u1ec3 k\u1ebft h\u1ee3p c\u1ea3 2.*")),(0,l.kt)("h2",{id:"c\xe1ch-c\xe0i-\u0111\u1eb7t-"},"C\xe1ch c\xe0i \u0111\u1eb7t :"),(0,l.kt)("p",null,"Tr\u01b0\u1edbc khi c\xe0i \u0111\u1eb7t keras b\u1ea1n ph\u1ea3i c\xe0i \u0111\u1eb7t m\u1ed9t trong s\u1ed1 c\xe1c th\u01b0 vi\u1ec7n sau tensorflow,CNTK,theano. Sau \u0111\xf3 b\u1ea1n c\xf3 th\u1ec3 c\xe0i \u0111\u1eb7t b\u1eb1ng 1 s\u1ed1 l\u1ec7nh sau \u0111\u1ed1i v\u1edbi window:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"pip install keras"),(0,l.kt)("li",{parentName:"ul"},"conda install keras")),(0,l.kt)("h2",{id:"t\xecm-hi\u1ec3u-c\u1ea5u-tr\xfac-c\u1ee7a-keras"},"T\xecm hi\u1ec3u c\u1ea5u tr\xfac c\u1ee7a Keras"),(0,l.kt)("p",null,"C\u1ea5u tr\xfac c\u1ee7a keras ch\xfang ta c\xf3 th\u1ec3 chia ra th\xe0nh 3 ph\u1ea7n ch\xednh :"),(0,l.kt)("center",null,(0,l.kt)("img",{width:"600",height:"300",src:t(1647).Z})),(0,l.kt)("h3",{id:"\u0111\u1ea7u-ti\u1ec1n-l\xe0-c\xe1c-module-d\xf9ng-\u0111\u1ec3-x\xe2y-d\u1ef1ng-b\u1ed9-x\u01b0\u01a1ng-cho-model-"},"\u0110\u1ea7u ti\u1ec1n l\xe0 c\xe1c module d\xf9ng \u0111\u1ec3 x\xe2y d\u1ef1ng b\u1ed9 x\u01b0\u01a1ng cho model :"),(0,l.kt)("center",null,(0,l.kt)("img",{width:"600",height:"300",src:t(9845).Z})),(0,l.kt)("p",null,"\u0110\u1ea7u ti\xean ta t\xecm hi\u1ec3u sub-module : Models trong keras. \u0110\u1ec3 kh\u1edfi t\u1ea1o m\u1ed9t model trong keras ta c\xf3 th\u1ec3 d\xf9ng 2 c\xe1ch:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"C\xe1ch 1 : Th\xf4ng qua  Sequential nh\u01b0 v\xed d\u1ee5 d\u01b0\u1edbi. Ch\xfang ta kh\u1edfi t\u1ea1o model b\u1eb1ng ",(0,l.kt)("inlineCode",{parentName:"li"},"Sequential")," sau \u0111\xf3 d\xf9ng method add \u0111\u1ec3 th\xeam c\xe1c layer.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"import numpy as np\nfrom keras.models import Sequential,Model\n\nmodel = Sequential()\nmodel.add(Conv2D(32, kernel_size=(3, 3),\n                 activation='relu',\n                 input_shape=input_shape))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dense(num_classes, activation='softmax'))\n\nmodel.compile(loss=keras.losses.categorical_crossentropy,\n              optimizer=keras.optimizers.Adadelta(),\n              metrics=['accuracy'])\n\nmodel.fit(x_train, y_train,\n          batch_size=batch_size,\n          epochs=epochs,\n          verbose=1,\n          validation_data=(x_test, y_test))\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"C\xe1ch th\u1ee9 2 \u0111\u1ec3 kh\u1edfi t\u1ea1o model l\xe0 d\xf9ng function API . Nh\u01b0 v\xed d\u1ee5 d\u01b0\u1edbi")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"from keras.models import Model\nfrom keras.layers import Input, Dense\n\na = Input(shape=(32,))\nb = Dense(32)(a)\nmodel = Model(inputs=a, outputs=b)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"N\xf3 c\u0169ng t\u01b0\u01a1ng t\u1ef1 nh\u01b0 computation graph, ch\xfang ta xem input c\u0169ng l\xe0 m\u1ed9t layer sau \u0111\xf3 build t\u1eeb input t\u1edbi output sau \u0111\xf3 k\u1ebft h\u1ee3p l\u1ea1i b\u1eb1ng h\xe0m  ",(0,l.kt)("inlineCode",{parentName:"li"},"Model"),". \u01afu \u0111i\u1ec3m c\u1ee7a ph\u01b0\u01a1ng ph\xe1p n\xe0y c\xf3 th\u1ec3 t\xf9y bi\u1ebfn nhi\u1ec1u h\u01a1n,gi\xfap ta x\xe2y d\u1ef1ng c\xe1c model ph\u1ee9c t\u1ea1p nhi\u1ec1u input v\xe0 output."),(0,l.kt)("li",{parentName:"ul"},"Khi ch\xfang ta kh\u1edfi t\u1ea1o m\u1ed9t model th\xec c\xf3 c\xe1c method ta c\u1ea7n l\u01b0u \xfd l\xe0 :"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"compile")," : Sau khi build model xong th\xec compile n\xf3 c\xf3 t\xe1c d\u1ee5ng bi\xean t\u1eadp l\u1ea1i to\xe0n b\u1ed9 model c\u1ee7a ch\xfang ta \u0111\xe3 build. \u1ede \u0111\xe2y ch\xfang ta c\xf3 th\u1ec3 ch\u1ecdn c\xe1c tham s\u1ed1 \u0111\u1ec3 training model nh\u01b0 : thu\u1eadt to\xe1n training th\xf4ng qua tham s\u1ed1 ",(0,l.kt)("inlineCode",{parentName:"li"},"optimizer"),", function loss c\u1ee7a model ch\xfang ta c\xf3 th\u1ec3 s\u1eed d\u1ee5ng m\u1eb7c \u0111\u1ecbnh ho\u1eb7c t\u1ef1 build th\xf4ng qua tham s\u1ed1 ",(0,l.kt)("inlineCode",{parentName:"li"},"loss"),", ch\u1ecdn metrics hi\u1ec7n th\u1ecb khi model \u0111\u01b0\u1ee3c training"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"summary")," method n\xe0y gi\xfap ch\xfang ta t\u1ed5ng h\u1ee3p l\u1ea1i model xem model c\xf3 bao nhi\xeau layer, t\u1ed5ng s\u1ed1 tham s\u1ed1 bao nhi\xeau,shape c\u1ee7a m\u1ed7i layer.."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"fit")," d\xf9ng \u0111\u1ec3 \u0111\u01b0a data v\xe0o training \u0111\u1ec3 t\xecm tham s\u1ed1 model(t\u01b0\u01a1ng t\u1ef1 nh\u01b0 sklearn)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"predict")," d\xf9ng \u0111\u1ec3 predict c\xe1c new instance"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"evaluate")," \u0111\u1ec3 t\xednh to\xe1n \u0111\u1ed9 ch\xednh x\xe1c c\u1ee7a model"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"history")," d\xf9ng \u0111\u1ec3 xem accuracy,loss qua t\u1eebng epochs . Th\u01b0\u1eddng d\xf9ng v\u1edbi matplotlib \u0111\u1ec3 v\u1ebd chart.")),(0,l.kt)("p",null,"Ti\u1ebfp theo ch\xfang ta t\xecm hi\u1ec3u \u0111\xean sub-module Layers : N\xf3 ch\u1ee9a c\xe1c layers chuy\xean d\u1ee5ng \u0111\u1ec3 ta build c\xe1c model nh\u01b0 CNN,RNN,GANs..C\xf3 r\u1ea5t nhi\u1ec1u layers n\xean ta ch\u1ec9 quan t\xe2m \u0111\u1ebfn m\u1ed9t s\u1ed1 layer th\u01b0\u1eddng s\u1eed d\u1ee5ng."),(0,l.kt)("center",null,(0,l.kt)("img",{width:"600",height:"300",src:t(7472).Z})),(0,l.kt)("p",null,"Core layer : ch\u1ee9a c\xe1c layer m\xe0 h\u1ea7u nh\u01b0 model n\xe0o c\u0169ng s\u1eed d\u1ee5ng \u0111\u1ebfn n\xf3."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Dense")," layer n\xe0y s\u1eed d\u1ee5ng nh\u01b0 m\u1ed9t layer neural network b\xecnh th\u01b0\u1eddng. C\xe1c tham s\u1ed1 quan t\xe2m.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"units")," chi\u1ec1u output"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"activation")," d\xf9ng \u0111\u1ec3 ch\u1ecdn activation."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"input_dim")," chi\u1ec1u input n\u1ebfu l\xe0 layer \u0111\u1ea7u ti\xean"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"use_bias")," c\xf3 s\u1eed d\u1ee5ng bias ko,true or false"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kernel_initializer")," kh\u1edfi t\u1ea1o gi\xe1 tr\u1ecb \u0111\u1ea7u cho tham s\u1ed1 trong layer tr\u1eeb bias"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bias_initializer")," kh\u1edfi t\u1ea1o gi\xe1 tr\u1ecb \u0111\u1ea7u cho bias"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kernel_regularizer")," regularizer cho coeff"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bias_regularizer")," regularizer cho bias"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"activity_regularizer")," c\xf3 s\u1eed d\u1ee5ng regularizer cho output ko"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kernel_constraint"),",",(0,l.kt)("inlineCode",{parentName:"li"},"bias_constraint")," c\xf3 r\xe0ng bu\u1ed9c v\u1ec1 weight ko"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Activation")," d\xf9ng \u0111\u1ec3 ch\u1ecdn activation trong layer(c\xf3 th\u1ec3 d\xf9ng tham s\u1ed1 activation thay th\u1ebf).Xem ph\u1ea7n sau."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Dropout")," layer n\xe0y d\xf9ng nh\u01b0 regularization cho c\xe1c layer h\u1ea1n ch\u1ebf overfiting. Tham s\u1ed1 c\u1ea7n ch\xfa \xfd :",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rate")," t\u1ec9 l\u1ec7 dropout"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"noise_shape")," c\xe1i n\xe0y ch\u01b0a t\xecm hi\u1ec3u"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"seed")," random seed b\xecnh th\u01b0\u1eddng"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Flatten")," d\xf9ng \u0111\u1ec3 l\xe1t ph\u1eb1ng layer \u0111\u1ec3 fully connection, vd : shape : 20x20 qua layer n\xe0y s\u1ebd l\xe0 400x1"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Input")," layer n\xe0y s\u1eed d\u1ee5ng input nh\u01b0 1 layer nh\u01b0 vd tr\u01b0\u1edbc ta \u0111\xe3 n\xf3i."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Reshape")," gi\u1ed1ng nh\u01b0 t\xean g\u1ecdi c\u1ee7a n\xf3, d\xf9ng \u0111\u1ec3 reshape"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Lambda")," d\xf9ng nh\u01b0 lambda trong python th\xf4i ha"),(0,l.kt)("li",{parentName:"ul"},"Convolutional Layers: ch\u1ee9a c\xe1c layer trong m\u1ea1ng n\u01a1 ron t\xedch ch\u1eadp . ",(0,l.kt)("inlineCode",{parentName:"li"},"Conv1D"),",",(0,l.kt)("inlineCode",{parentName:"li"},"Conv2D")," l\xe0 convolution layer d\xf9ng \u0111\u1ec3 l\u1ea5y feature t\u1eeb image. tham s\u1ed1 c\u1ea7n ch\xfa \xfd:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"filters")," s\u1ed1 filter c\u1ee7a convolution layer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kernel_size")," size window search tr\xean image"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"strides")," b\u01b0\u1edbc nh\u1ea3y m\u1ed7i window search"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"padding")," same l\xe0 d\xf9ng padding,valid l\xe0 ko"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"data_format")," format channel \u1edf \u0111\u1ea7u hay cu\u1ed1i"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"UpSampling1D"),",",(0,l.kt)("inlineCode",{parentName:"li"},"UpSampling2D")," Ng\u01b0\u1ee3c l\u1ea1i v\u1edbi convolution layer",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"size")," vd (2,2) c\xf3 ngh\u0129a m\u1ed7i pixel ban \u0111\u1ea7u s\u1ebd th\xe0nh 4 pixel"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ZeroPadding1D"),",",(0,l.kt)("inlineCode",{parentName:"li"},"ZeroPadding2D")," d\xf9ng \u0111\u1ec3 padding tr\xean image."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"padding")," s\u1ed1 pixel padding "))),(0,l.kt)("li",{parentName:"ul"},"Pooling Layers : Ch\u1ee9a c\xe1c layer d\xf9ng trong m\u1ea1ng CNN.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MaxPooling1D"),",",(0,l.kt)("inlineCode",{parentName:"li"},"MaxPooling2D")," d\xf9ng \u0111\u1ec3 l\u1ea5y feature n\u1ed5i b\u1eadt(d\xf9ng max) v\xe0 gi\xfap gi\u1ea3m parameter khi training"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pool_size")," size pooling"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"AveragePooling1D"),",",(0,l.kt)("inlineCode",{parentName:"li"},"AveragePooling2D")," gi\u1ed1ng nh\u01b0 maxpooling nh\u01b0ng d\xf9ng Average"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GlobalMaxPooling1D"),",",(0,l.kt)("inlineCode",{parentName:"li"},"GlobalMaxPooling2D")," ch\u01b0a d\xf9ng bao gi\u1edd n\xean ch\u01b0a hi\u1ec3u n\xf3 l\xe0m g\xec"),(0,l.kt)("li",{parentName:"ul"},"Recurrent Layers ch\u1ee9a c\xe1c layers d\xf9ng trong m\u1ea1ng RNN",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RNN")," layer RNN c\u01a1 b\u1ea3n"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GRU")," kh\u1eafc ph\u1ee5c h\u1ea1n ch\u1ebf RNN tr\xe1nh vanish gradient."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"LSTM")," Long Short-Term Memory layer"))),(0,l.kt)("li",{parentName:"ul"},"Embedding layer : ",(0,l.kt)("inlineCode",{parentName:"li"},"Embedding")," d\xf9ng trong nhi\u1ec1u trong nlp m\u1ee5c \u0111\xedch embbding sang m\u1ed9t kh\xf4ng gian m\u1edbi c\xf3 chi\u1ec1u nh\u1ecf h\u01a1n, v\xe0 dc learning from data thay cho one-hot lad hard code.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"input_dim")," size c\u1ee7a vocabulary"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"output_dim")," size c\u1ee7a word embbding"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"input_length")," chi\u1ec1u d\xe0i m\u1ed7i sequence"))),(0,l.kt)("li",{parentName:"ul"},"Merge Layers ch\u1ee9a c\xe1c layers gi\xfap ch\xfang ta c\u1ed9ng,tr\u1eeb,ho\u1eb7c n\u1ed1i c\xe1c layer nh\u01b0 c\xe1c vector v\u1eady :",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Add")," c\u1ed9ng c\xe1c layers"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Subtract"),"tr\u1eeb c\xe1c layers"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Multiply"),"nh\xe2n c\xe1c layer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Average")," t\xednh trung b\xecnh c\xe1c layers"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Maximum")," l\u1ea5y maximun gi\u1eefa c\xe1c layers"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Concatenate")," n\u1ed1i c\xe1c layer"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Dot")," Nh\xe2n matrix gi\u1eef 2 layers\nOwn Keras layers : Gi\xfap ch\xfang ta c\xf3 th\u1ec3 x\xe2y d\u1ef1ng layer nh\u01b0 theo \xfd mu\u1ed1n, g\u1ed3m 3 method ch\xfang ta c\u1ea7n ch\xfa \xfd l\xe0 ",(0,l.kt)("inlineCode",{parentName:"li"},"build"),",",(0,l.kt)("inlineCode",{parentName:"li"},"call")," v\xe0 ",(0,l.kt)("inlineCode",{parentName:"li"},"compute_output_shape"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"from keras import backend as K\nfrom keras.engine.topology import Layer\nimport numpy as np\n\nclass MyLayer(Layer):\n\n    def __init__(self, output_dim, **kwargs):\n        self.output_dim = output_dim\n        super(MyLayer, self).__init__(**kwargs)\n\n    def build(self, input_shape):\n        # Create a trainable weight variable for this layer.\n        self.kernel = self.add_weight(name='kernel', \n                                      shape=(input_shape[1], self.output_dim),\n                                      initializer='uniform',\n                                      trainable=True)\n        super(MyLayer, self).build(input_shape)  # Be sure to call this at the end\n\n    def call(self, x):\n        return K.dot(x, self.kernel)\n\n    def compute_output_shape(self, input_shape):\n        return (input_shape[0], self.output_dim)\n")),(0,l.kt)("h3",{id:"ti\u1ebfp-theo-ch\xfang-ta-t\xecm-hi\u1ec3u-\u0111\u1ebfn-ti\u1ec1n-x\u1eed-l\xfd-d\u1eef-li\u1ec7u-trong-keras-n\xf3-\u0111\u01b0\u1ee3c-chia-ra-l\xe0m-3-ph\u1ea7n-"},"Ti\u1ebfp theo ch\xfang ta t\xecm hi\u1ec3u \u0111\u1ebfn ti\u1ec1n x\u1eed l\xfd d\u1eef li\u1ec7u trong keras, n\xf3 \u0111\u01b0\u1ee3c chia ra l\xe0m 3 ph\u1ea7n :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Sequence Preprocessing")," ti\u1ec1n x\u1eed l\xfd chu\u1ed7i .",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TimeseriesGenerator")," c\xe1i n\xe0y d\xf9ng \u0111\u1ec3 t\u1ea1o d\u1eef li\u1ec7u cho time series"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pad_sequences")," d\xf9ng \u0111\u1ec3 padding gi\xfap c\xe1c chu\u1ed7i c\xf3 \u0111\u1ed9 d\xe0i b\u1eb1ng nhau"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"skipgrams")," t\u1ea1o data trong model skip gram,k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 2 tuple n\u1ebfu word xu\u1ea5t hi\u1ec7n c\xf9ng nhau l\xe0 1 n\u1ebfu ko l\xe0 0."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Text Preprocessing")," ti\u1ec1n x\u1eed l\xfd text",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Tokenizer")," gi\u1ed1ng k\u1ef9 thu\u1eadt tokenizer trong nlp, t\u1ea1o tokenizer t\u1eeb documment"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"one_hot")," t\u1ea1o data d\u1ea1ng one hot encoding"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"text_to_word_sequence")," covert text th\xe0nh sequence"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Image Preprocessing")," ti\u1ec1n x\u1eed l\xfd image",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ImageDataGenerator")," t\u1ea1o th\xeam data b\u1eb1ng c\xe1ch scale,rotation...")))),(0,l.kt)("h3",{id:"c\xe1c-function-trong-b\u1ed9-x\u01b0\u01a1ng-c\u1ee7a-model"},"C\xe1c function trong b\u1ed9 x\u01b0\u01a1ng c\u1ee7a model"),(0,l.kt)("p",null,"C\xe1c h\xe0m ",(0,l.kt)("inlineCode",{parentName:"p"},"loss functions")," th\u01b0\u1eddng d\xf9ng :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mean_squared_error")," th\u01b0\u1eddng d\xf9ng trong regression t\xednh theo eculic"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mean_absolute_error")," t\xednh theo tr\u1ecb tuy\u1ec7t \u0111\u1ed1i"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"categorical_crossentropy")," d\xf9ng trong classifier nhi\u1ec1u class"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"binary_crossentropy")," d\xf9ng trong classifier 2 class"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kullback_leibler_divergence")," d\xf9ng \u0111\u1ec3 t\xednh loss gi\u1eefa ph\xe2n ph\u1ed1i th\u1ef1c t\u1ebf v\xe0 th\u1ef1c nghi\u1ec7m")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"metrics")," n\xf3 l\xe0 th\u01b0\u1edbc \u0111o \u0111\u1ec3 ta \u0111\xe1nh gi\xe1 accuracy c\u1ee7a model :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"binary_accuracy")," n\u1ebfu y_true==y_pre th\xec tr\u1ea3 v\u1ec1 1 ng\u01b0\u1ee3c l\u1ea1i 0,d\xf9ng cho 2 class"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"categorical_accuracy")," t\u01b0\u01a1ng t\u1ef1 binary_accuracy nh\u01b0ng cho nhi\u1ec1u class")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"optimizers")," d\xf9ng \u0111\u1ec3 ch\u1ecdn thu\u1eadt to\xe1n training."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SGD")," Stochastic gradient descent optimizer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RMSprop")," RMSProp optimizer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Adam")," Adam optimizer")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"activations")," \u0111\u1ec3 ch\u1ecdn activation function "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"linear")," nh\u01b0 trong linear regression"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"softmax")," d\xf9ng trong multi classifier"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"relu")," max(0,x) d\xf9ng trong c\xe1c layer cnn,rnn \u0111\u1ec3 gi\u1ea3m chi ph\xed t\xednh to\xe1n"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tanh")," range (-1,1)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Sigmoid")," range (0,1) d\xf9ng nhi\u1ec1u trong binary class")),(0,l.kt)("p",null,"Callbacks : khi model ch\xfang ta l\u1edbn c\xf3 khi training th\xec g\u1eb7p s\u1ef1 c\u1ed1 ta mu\u1ed1n l\u01b0u l\u1ea1i model \u0111\u1ec3 ch\u1ea1y l\u1ea1i th\xec callback gi\xfap t l\xe0m \u0111i\u1ec1u n\xe0y :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ModelCheckpoint")," l\u01b0u l\u1ea1i model sau m\u1ed7i epoch"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"EarlyStopping")," stop training khi training ko c\u1ea3i thi\u1ec7n model"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ReduceLROnPlateau")," gi\u1ea3m learning m\u1ed7i khi metrics ko \u0111\u01b0\u1ee3c c\u1ea3i thi\u1ec7n")),(0,l.kt)("p",null,"Datasets. Keras h\u1ed7 tr\u1ee3 m\u1ed9t s\u1ed1 dataset theo c\xf4ng th\u1ee9c :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cifar100")," g\u1ed3m 50,000 32x32 color training images, labeled over 100 categories, and 10,000 test images."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mnist")," data 70k image data hand written."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"fashion_mnist")," Dataset of 70k 28x28 grayscale images of 10 fashion categories"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"imdb")," 25,000 movies reviews from IMDB, label \u0111\xe1nh theo pos/neg"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reuters")," 11,228 newswires from Reuters, labeled over 46 topics"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"boston_housing")," data gi\xe1 nh\xe0 \u1edf boston theo 13 features")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"from keras.datasets import name_data\n(X_train,X_test),(y_train,y_test) = name_data.load_data()\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Applications")," ch\u1ee9a c\xe1c pre-training weight c\u1ee7a c\xe1c model deep learning n\u1ed5i ti\u1ebfng.",(0,l.kt)("inlineCode",{parentName:"p"},"Xception"),",",(0,l.kt)("inlineCode",{parentName:"p"},"VGG16"),",",(0,l.kt)("inlineCode",{parentName:"p"},"VGG19"),",",(0,l.kt)("inlineCode",{parentName:"p"},"resnet50"),",",(0,l.kt)("inlineCode",{parentName:"p"},"inceptionv3"),",\n",(0,l.kt)("inlineCode",{parentName:"p"},"InceptionResNetV2"),",",(0,l.kt)("inlineCode",{parentName:"p"},"MobileNet"),",",(0,l.kt)("inlineCode",{parentName:"p"},"DenseNet"),",",(0,l.kt)("inlineCode",{parentName:"p"},"NASNet")," c\u1ea9u tr\xfac chung nh\u01b0 sau :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"preprocess_input")," d\xf9ng \u0111\u1ec3 preprocessing input custom same v\u1edbi input c\u1ee7a pretraining"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"decode_predictions")," d\xf9ng \u0111\u1ec3 xem label predict")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"from keras.applications.name_pre_train import Name_pre_train\nfrom keras.applications.name_pre_train import preprocess_input, decode_predictions\nmodel = Name_pre_train(weights='t\xean dataset')\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"backends")," banckend c\xf3 ngh\u0129a l\xe0 thay v\xec keras x\xe2y d\u1ef1ng t\u1eeb \u0111\u1ea7u c\xe1c c\xf4ng th\u1ee9c t\u1eeb \u0111\u01a1n gi\u1ea3n \u0111\u1ebfn ph\u1ee9c t\u1ea1p, th\xec n\xf3 d\xf9ng nh\u1eefng th\u01b0 vi\u1ec7n \u0111\xe3 x\xe2y d\u1ef1ng s\u1eb5n r\u1ed3i v\xe0 d\xf9ng th\xf4i. Gi\xfap ti\u1ebft ki\u1ec7m dc th\u1eddi gian v\xe0 ch\xed ph\xed. Trong keras c\xf3 h\u1ed7 tr\u1ee3 3 backend l\xe0 tensorflow,theano v\xe0 CNTK.\n",(0,l.kt)("inlineCode",{parentName:"p"},"initializers")," kh\u1edfi t\u1ea1o gi\xe1 tr\u1ecb  weight c\u1ee7a coeff v\xe0 bias tr\u01b0\u1edbc khi training l\u1ea7n l\u01b0\u1ee3t ",(0,l.kt)("inlineCode",{parentName:"p"},"kernel_initializer")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"bias_initializer"),". m\u1eb7c \u0111\u1ecbnh l\xe0 ",(0,l.kt)("inlineCode",{parentName:"p"},"glorot_uniform")," ph\xe2n ph\u1ed1i uniform v\u1edbi gi\xe1 tr\u1ecb 1/c\u0103n(input+output).\n",(0,l.kt)("inlineCode",{parentName:"p"},"regularizers")," D\xf9ng \u0111\u1ec3 ph\u1ea1t nh\u1eefng coeff n\xe0o t\xe1c \u0111\u1ed9ng qu\xe1 m\u1ea1nh v\xe0o m\u1ed7i layer th\u01b0\u1eddng d\xf9ng l\xe0 L1 v\xe0 L2\n",(0,l.kt)("inlineCode",{parentName:"p"},"constraints")," d\xf9ng \u0111\u1ec3 thi\u1ebft l\u1eadp c\xe1c \u0111i\u1ec1u ki\u1ec7n r\xe0ng bu\u1ed9c khi training\n",(0,l.kt)("inlineCode",{parentName:"p"},"visualization")," gi\xfap ch\xfang ta plot l\u1ea1i c\u1ea5u tr\xfac m\u1ea1ng neral network.\n",(0,l.kt)("inlineCode",{parentName:"p"},"Utils")," ch\u1ee9a c\xe1c function c\u1ea7n thi\u1ebft gi\xfap ta x\u1eed l\xfd data nhanh h\u01a1n.\n",(0,l.kt)("inlineCode",{parentName:"p"},"normalize")," chu\u1ea9n h\xf3a data theo L2\n",(0,l.kt)("inlineCode",{parentName:"p"},"plot_model")," gi\xfap ch\xfang ta plot model\n",(0,l.kt)("inlineCode",{parentName:"p"},"to_categorical")," covert class sang binary class matrix"))}h.isMDXComponent=!0},1647:function(e,n,t){n.Z=t.p+"assets/images/keras0-d08db28274686ce6406b726cbd48b319.jpg"},9845:function(e,n,t){n.Z=t.p+"assets/images/keras1-3c3791262c5f8b611f5fb8586469a14e.jpg"},7472:function(e,n,t){n.Z=t.p+"assets/images/keras2-e0b48fb26386aa038ae5cdfed399483c.jpg"}}]);